ALTER TABLE DSS.DSS_ORDER_SCAN_LINES
 DROP PRIMARY KEY CASCADE;

DROP TABLE DSS.DSS_ORDER_SCAN_LINES CASCADE CONSTRAINTS;

CREATE TABLE DSS.DSS_ORDER_SCAN_LINES
(
  JOBID              NUMBER,
  LINEID             NUMBER,
  MERGED             VARCHAR2(1 BYTE)           DEFAULT 'Y',
  LINESEQ            NUMBER,
  OPREATING_UNIT     NUMBER,
  ORGANIZATION_ID    NUMBER,
  ORDER_TYPE         VARCHAR2(30 BYTE),
  ORDER_NUMBER       VARCHAR2(20 BYTE),
  INVENTORY_ITEM_ID  NUMBER,
  PRODUCT_CODE       VARCHAR2(60 BYTE),
  CAETGORY_ID        NUMBER,
  ORDER_QTY          NUMBER,
  DELIVERED_QTY      NUMBER,
  PICKED_QTY         NUMBER,
  SCANNED_QTY        NUMBER,
  CUSTOM_QTY         NUMBER,
  WMS_SYNC           VARCHAR2(1 BYTE)           DEFAULT 'N',
  SCAN_YN            VARCHAR2(1 BYTE)           DEFAULT 'N',
  WARRANTYPRINT_YN   VARCHAR2(1 BYTE)           DEFAULT 'N',
  WARRANTY_YN        VARCHAR2(1 BYTE)           DEFAULT 'N',
  WARRANTY_SEQ       NUMBER,
  WARRANTY_CODE      VARCHAR2(30 BYTE),
  CREATE_BY          VARCHAR2(30 BYTE),
  MODIFY_BY          VARCHAR2(30 BYTE),
  CREATE_DATE        DATE                       DEFAULT SYSDATE,
  MODIFY_DATE        DATE                       DEFAULT SYSDATE,
  EXPIRY_DATE        DATE                       DEFAULT SYSDATE,
  EXPIRY_DAYS        NUMBER                     DEFAULT 0,
  EDITABLE_YN        VARCHAR2(1 BYTE)           DEFAULT 'Y',
  ARCHIVED_YN        VARCHAR2(1 BYTE)           DEFAULT 'N',
  ACTIVE_YN          VARCHAR2(1 BYTE)           DEFAULT 'N',
  STATUS_YN          VARCHAR2(1 BYTE)           DEFAULT 'N',
  HAS_SERIALS        VARCHAR2(1 BYTE)           DEFAULT 'N',
  BARCODES           VARCHAR2(1000 BYTE),
  ATTRIBUTE1         VARCHAR2(100 BYTE),
  ATTRIBUTE2         VARCHAR2(100 BYTE),
  ATTRIBUTE3         VARCHAR2(100 BYTE),
  ATTRIBUTE4         VARCHAR2(100 BYTE),
  ATTRIBUTE5         VARCHAR2(100 BYTE),
  ATTRIBUTE6         VARCHAR2(100 BYTE),
  ATTRIBUTE7         VARCHAR2(100 BYTE),
  ATTRIBUTE8         VARCHAR2(100 BYTE),
  ATTRIBUTE9         VARCHAR2(100 BYTE),
  ATTRIBUTE10        VARCHAR2(100 BYTE)
)
NOCOMPRESS 
TABLESPACE AXM_TS_WMS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            BUFFER_POOL      DEFAULT
           )
PARTITION BY RANGE (CREATE_DATE)
(  
  PARTITION DSCNL_2015 VALUES LESS THAN (TO_DATE(' 2016-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2016 VALUES LESS THAN (TO_DATE(' 2017-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2017 VALUES LESS THAN (TO_DATE(' 2018-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2018 VALUES LESS THAN (TO_DATE(' 2019-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2019 VALUES LESS THAN (TO_DATE(' 2020-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2020 VALUES LESS THAN (TO_DATE(' 2021-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_2021 VALUES LESS THAN (TO_DATE(' 2022-01-01 00:00:00', 'SYYYY-MM-DD HH24:MI:SS', 'NLS_CALENDAR=GREGORIAN'))
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               ),  
  PARTITION DSCNL_MAX VALUES LESS THAN (MAXVALUE)
    LOGGING
    NOCOMPRESS 
    TABLESPACE AXM_TS_WMS
    PCTFREE    10
    INITRANS   1
    MAXTRANS   255
    STORAGE    (
                INITIAL          8M
                NEXT             1M
                MINEXTENTS       1
                MAXEXTENTS       UNLIMITED
                BUFFER_POOL      DEFAULT
               )
)
NOCACHE
MONITORING;


CREATE INDEX DSS.DSS_ORDER_SCAN_LINES_IX8 ON DSS.DSS_ORDER_SCAN_LINES
(ORDER_TYPE, TO_NUMBER("ORDER_NUMBER"))
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX DSS.DSS_ORDER_SCAN_LINES_PK ON DSS.DSS_ORDER_SCAN_LINES
(LINEID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX DSS.DSS_ORDER_SCAN_LINES_U01 ON DSS.DSS_ORDER_SCAN_LINES
(INVENTORY_ITEM_ID, JOBID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX DSS.DSS_ORDER_SCAN_LINES_U02 ON DSS.DSS_ORDER_SCAN_LINES
(LINEID, INVENTORY_ITEM_ID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX DSS.DSS_ORDER_SCAN_LINES_X01 ON DSS.DSS_ORDER_SCAN_LINES
(ORDER_TYPE, ORDER_NUMBER, ORGANIZATION_ID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX DSS.DSS_ORDER_SCAN_LINES_X06 ON DSS.DSS_ORDER_SCAN_LINES
(JOBID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE INDEX DSS.DSS_ORDER_SCAN_LINES_X5 ON DSS.DSS_ORDER_SCAN_LINES
(ORDER_NUMBER)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER DSS.DSS_ORDER_SCAN_LINES_TRG
   BEFORE INSERT
   ON DSS.DSS_ORDER_SCAN_LINES
   REFERENCING NEW AS New OLD AS Old
   FOR EACH ROW
BEGIN
   -- For Toad: Highlight column LINEID
   IF :new.LINEID IS NULL
   THEN
      :new.LINEID := SEQ_ORDER_SCAN_LINEID.NEXTVAL;
   END IF;
END DSS_ORDER_SCAN_LINES_TRG;
/


CREATE OR REPLACE TRIGGER DSS.DSS_ORDER_SCAN_LINES_TRG2
   BEFORE INSERT OR UPDATE OF WARRANTY_YN
   ON DSS.DSS_ORDER_SCAN_LINES
   REFERENCING NEW AS New OLD AS Old
   FOR EACH ROW
DECLARE
   ISUNIQUE_KEY    CHAR (1);
   ISWARRANTY_YN   CHAR (1);
   VCOUNT          NUMBER;
BEGIN
   ISUNIQUE_KEY := 'N';


   SELECT UNIQUE_KEY, NVL (ATTRIBUTE9, 'Y')
     INTO ISUNIQUE_KEY, ISWARRANTY_YN
     FROM DSS.TK_CATEGORIES_CONFIG
    WHERE CATEGORY_ID = :NEW.CAETGORY_ID;

   IF :NEW.WARRANTY_YN = 'Y'
   THEN
      IF ISUNIQUE_KEY = 'Y'
      THEN
         IF ISWARRANTY_YN = 'N'
         THEN
            :NEW.WARRANTY_YN := 'N';
         ELSE
            :NEW.WARRANTY_YN := 'Y';
         END IF;
      ELSE
         SELECT COUNT (*)
           INTO VCOUNT
           FROM TK_PRODUCTS_CONFIG PC
          WHERE     INVENTORY_ITEM_ID = :NEW.INVENTORY_ITEM_ID
                AND ORGANIZATION_ID = :NEW.ORGANIZATION_ID;

         IF VCOUNT > 0
         THEN
            :NEW.WARRANTY_YN := 'Y';
         ELSE
            :NEW.WARRANTY_YN := 'N';
         END IF;
      END IF;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
      :NEW.WARRANTY_YN := 'N';
END DSS_ORDER_SCAN_LINES_TRG2;
/


ALTER TABLE DSS.DSS_ORDER_SCAN_LINES ADD (
  CONSTRAINT DSS_ORDER_SCAN_LINES_PK
  PRIMARY KEY
  (LINEID)
  USING INDEX DSS.DSS_ORDER_SCAN_LINES_PK
  ENABLE VALIDATE,
  CONSTRAINT DSS_ORDER_SCAN_LINES_U02
  UNIQUE (LINEID, INVENTORY_ITEM_ID)
  USING INDEX DSS.DSS_ORDER_SCAN_LINES_U02
  ENABLE VALIDATE);

GRANT SELECT ON DSS.DSS_ORDER_SCAN_LINES TO CFROTEST;

GRANT SELECT ON DSS.DSS_ORDER_SCAN_LINES TO SELDATA;

GRANT ALTER, DELETE, INDEX, INSERT, REFERENCES, SELECT, UPDATE, ON COMMIT REFRESH, QUERY REWRITE, DEBUG, FLASHBACK ON DSS.DSS_ORDER_SCAN_LINES TO XXWMS;
