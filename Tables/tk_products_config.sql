ALTER TABLE DSS.TK_PRODUCTS_CONFIG
 DROP PRIMARY KEY CASCADE;

DROP TABLE DSS.TK_PRODUCTS_CONFIG CASCADE CONSTRAINTS;

CREATE TABLE DSS.TK_PRODUCTS_CONFIG
(
  LINEID                   NUMBER,
  CONFIGID                 NUMBER               NOT NULL,
  CONFIG_NAME              VARCHAR2(100 BYTE),
  OPERATING_UNIT           NUMBER               NOT NULL,
  ORGANIZATION_ID          NUMBER               NOT NULL,
  INVENTORY_ITEM_ID        NUMBER               NOT NULL,
  PRODUCT_CODE             VARCHAR2(40 BYTE),
  ALIAS_PRODUCT_CODE       VARCHAR2(40 BYTE),
  ALIAS_INVENTORY_ITEM_ID  NUMBER,
  UNIQUE_KEY               CHAR(1 BYTE)         DEFAULT 'N',
  NUMERIC_KEY              CHAR(1 BYTE)         DEFAULT 'N',
  CHECK_BARCODE            CHAR(1 BYTE)         DEFAULT 'N',
  IMEI_KEY                 CHAR(1 BYTE)         DEFAULT 'N',
  ALLOW_SPECIALCHAR        CHAR(1 BYTE)         DEFAULT 'N',
  IMEI_LENGTH_MAX          NUMBER               DEFAULT 0,
  IMEI_LENGTH_MIN          NUMBER               DEFAULT 0,
  REMOVE_LAST_CHAR         NUMBER               DEFAULT 0,
  REMOVE_FIRST_CHAR        NUMBER               DEFAULT 0,
  SCAN_REQUIRED            CHAR(1 BYTE)         DEFAULT 'N',
  ALLOWNULL                CHAR(1 BYTE)         DEFAULT 'Y',
  DATA_SYNC                CHAR(1 BYTE)         DEFAULT 'N',
  IMEI_FUNC1_NAME          VARCHAR2(50 BYTE),
  IMEI_FUNC2_NAME          VARCHAR2(50 BYTE),
  STATUS                   CHAR(1 BYTE)         DEFAULT 'A'                   NOT NULL,
  ENABLED                  CHAR(1 BYTE)         DEFAULT 'A',
  CREATE_BY                VARCHAR2(50 BYTE),
  CREATE_DATE              DATE                 DEFAULT SYSDATE,
  ATTRIBUTE1               VARCHAR2(200 BYTE)   DEFAULT 'N',
  ATTRIBUTE2               VARCHAR2(200 BYTE),
  ATTRIBUTE3               VARCHAR2(200 BYTE),
  ATTRIBUTE4               VARCHAR2(200 BYTE),
  ATTRIBUTE5               VARCHAR2(200 BYTE),
  ATTRIBUTE6               VARCHAR2(200 BYTE),
  ATTRIBUTE7               VARCHAR2(200 BYTE),
  ATTRIBUTE8               VARCHAR2(200 BYTE),
  ATTRIBUTE9               VARCHAR2(200 BYTE),
  ATTRIBUTE10              VARCHAR2(200 BYTE)   DEFAULT 'N'
)
TABLESPACE AXM_TS_WMS
PCTUSED    0
PCTFREE    10
INITRANS   1
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           )
LOGGING 
NOCOMPRESS 
NOCACHE
MONITORING;

COMMENT ON COLUMN DSS.TK_PRODUCTS_CONFIG.ATTRIBUTE1 IS 'IS DEFUALT KEY';

COMMENT ON COLUMN DSS.TK_PRODUCTS_CONFIG.ATTRIBUTE10 IS 'PRINT Y/N';


CREATE UNIQUE INDEX DSS.TK_PRODUCTS_CONFIG_PK ON DSS.TK_PRODUCTS_CONFIG
(LINEID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE UNIQUE INDEX DSS.TK_PRODUCTS_CONFIG_U01 ON DSS.TK_PRODUCTS_CONFIG
(INVENTORY_ITEM_ID, ORGANIZATION_ID, CONFIGID)
LOGGING
TABLESPACE AXM_TS_WMS
PCTFREE    10
INITRANS   2
MAXTRANS   255
STORAGE    (
            INITIAL          64K
            NEXT             1M
            MINEXTENTS       1
            MAXEXTENTS       UNLIMITED
            PCTINCREASE      0
            BUFFER_POOL      DEFAULT
           );

CREATE OR REPLACE TRIGGER DSS.TK_PRODUCTS_CONFIG_TRG1
BEFORE INSERT
ON DSS.TK_PRODUCTS_CONFIG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
   CountNo   NUMBER;
BEGIN
   -- For Toad:  Highlight column CONFIGID
   ---:new.CONFIGID := TK_PRODUCTS_CONFIG_SEQ.nextval;

   SELECT COUNT (*)
     INTO CountNo
     FROM TK_PRODUCTS_CONFIG
    WHERE     ORGANIZATION_ID = :new.ORGANIZATION_ID
          AND INVENTORY_ITEM_ID = :new.INVENTORY_ITEM_ID;

   IF CountNo = 0
   THEN
      :new.ATTRIBUTE1 := 'Y';
   ELSE 
       :new.ATTRIBUTE1 := 'N';
   END IF;
exception when others then 
return ;
   
END TK_PRODUCTS_CONFIG_TRG1;
/


CREATE OR REPLACE TRIGGER DSS.TK_PRODUCTS_CONFIG_TRG2
BEFORE DELETE
ON DSS.TK_PRODUCTS_CONFIG
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
   tmpVar   NUMBER;
BEGIN
   tmpVar := 0;

   IF :OLD.ATTRIBUTE1 = 'Y'
   THEN
   
      UPDATE TK_PRODUCTS_CONFIG
         SET ATTRIBUTE1 = 'Y'
       WHERE     ORGANIZATION_ID = :OLD.ORGANIZATION_ID
             AND INVENTORY_ITEM_ID = :OLD.INVENTORY_ITEM_ID
             AND LINEID != :OLD.LINEID
             AND ROWNUM = 1;
   END IF;
EXCEPTION
   WHEN OTHERS
   THEN
      -- Consider logging the error and then re-raise
       NULL;
END TK_PRODUCTS_CONFIG_TRG2;
/


ALTER TABLE DSS.TK_PRODUCTS_CONFIG ADD (
  CONSTRAINT TK_PRODUCTS_CONFIG_PK
  PRIMARY KEY
  (LINEID)
  USING INDEX DSS.TK_PRODUCTS_CONFIG_PK
  ENABLE VALIDATE,
  CONSTRAINT TK_PRODUCTS_CONFIG_U01
  UNIQUE (INVENTORY_ITEM_ID, ORGANIZATION_ID, CONFIGID)
  USING INDEX DSS.TK_PRODUCTS_CONFIG_U01
  ENABLE VALIDATE);

GRANT SELECT ON DSS.TK_PRODUCTS_CONFIG TO SELDATA;

GRANT SELECT ON DSS.TK_PRODUCTS_CONFIG TO XXWMS;
