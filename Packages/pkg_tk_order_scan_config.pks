DROP PACKAGE DSS.PKG_TK_ORDER_SCAN_CONFIG;

CREATE OR REPLACE PACKAGE DSS.PKG_TK_ORDER_SCAN_CONFIG  as 

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_LoadByPrimaryKey (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_Update (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
	p_ORDER_TYPE IN TK_ORDER_SCAN_CONFIG.ORDER_TYPE%type,
	p_ORDER_DESCRIPTION IN TK_ORDER_SCAN_CONFIG.ORDER_DESCRIPTION%type,
	p_ORDER_SHORT_CODE IN TK_ORDER_SCAN_CONFIG.ORDER_SHORT_CODE%type,
	p_ORDER_EXPIRED IN TK_ORDER_SCAN_CONFIG.ORDER_EXPIRED%type,
	p_ORDER_FILTER IN TK_ORDER_SCAN_CONFIG.ORDER_FILTER%type,
	p_WMS_QTY_SYNC IN TK_ORDER_SCAN_CONFIG.WMS_QTY_SYNC%type,
	p_SCAN_ENABLED IN TK_ORDER_SCAN_CONFIG.SCAN_ENABLED%type,
	p_WARRANTY_ENABLED IN TK_ORDER_SCAN_CONFIG.WARRANTY_ENABLED%type,
	p_ISADVANCE IN TK_ORDER_SCAN_CONFIG.ISADVANCE%type,
	p_PICK_RESTRICTION IN TK_ORDER_SCAN_CONFIG.PICK_RESTRICTION%type,
	p_CREATE_DATE IN TK_ORDER_SCAN_CONFIG.CREATE_DATE%type); 
PROCEDURE P_Insert (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
	p_ORDER_TYPE IN TK_ORDER_SCAN_CONFIG.ORDER_TYPE%type,
	p_ORDER_DESCRIPTION IN TK_ORDER_SCAN_CONFIG.ORDER_DESCRIPTION%type,
	p_ORDER_SHORT_CODE IN TK_ORDER_SCAN_CONFIG.ORDER_SHORT_CODE%type,
	p_ORDER_EXPIRED IN TK_ORDER_SCAN_CONFIG.ORDER_EXPIRED%type,
	p_ORDER_FILTER IN TK_ORDER_SCAN_CONFIG.ORDER_FILTER%type,
	p_WMS_QTY_SYNC IN TK_ORDER_SCAN_CONFIG.WMS_QTY_SYNC%type,
	p_SCAN_ENABLED IN TK_ORDER_SCAN_CONFIG.SCAN_ENABLED%type,
	p_WARRANTY_ENABLED IN TK_ORDER_SCAN_CONFIG.WARRANTY_ENABLED%type,
	p_ISADVANCE IN TK_ORDER_SCAN_CONFIG.ISADVANCE%type,
	p_PICK_RESTRICTION IN TK_ORDER_SCAN_CONFIG.PICK_RESTRICTION%type,
	p_CREATE_DATE IN TK_ORDER_SCAN_CONFIG.CREATE_DATE%type); 
PROCEDURE P_Delete (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type); 

END PKG_TK_ORDER_SCAN_CONFIG;
/


DROP PACKAGE BODY DSS.PKG_TK_ORDER_SCAN_CONFIG;

CREATE OR REPLACE PACKAGE BODY DSS.PKG_TK_ORDER_SCAN_CONFIG  as 

PROCEDURE P_LoadByPrimaryKey (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		LINE_SEQ,
		ORDER_TYPE,
		ORDER_DESCRIPTION,
		ORDER_SHORT_CODE,
		ORDER_EXPIRED,
		ORDER_FILTER,
		WMS_QTY_SYNC,
		SCAN_ENABLED,
		WARRANTY_ENABLED,
		ISADVANCE,
		PICK_RESTRICTION,
		CREATE_DATE
	FROM TK_ORDER_SCAN_CONFIG
	WHERE
		LINE_SEQ = p_LINE_SEQ
;
END P_LoadByPrimaryKey;

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		LINE_SEQ,
		ORDER_TYPE,
		ORDER_DESCRIPTION,
		ORDER_SHORT_CODE,
		ORDER_EXPIRED,
		ORDER_FILTER,
		WMS_QTY_SYNC,
		SCAN_ENABLED,
		WARRANTY_ENABLED,
		ISADVANCE,
		PICK_RESTRICTION,
		CREATE_DATE
	FROM TK_ORDER_SCAN_CONFIG;
END P_LoadAll ;


PROCEDURE P_Update (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
	p_ORDER_TYPE IN TK_ORDER_SCAN_CONFIG.ORDER_TYPE%type,
	p_ORDER_DESCRIPTION IN TK_ORDER_SCAN_CONFIG.ORDER_DESCRIPTION%type,
	p_ORDER_SHORT_CODE IN TK_ORDER_SCAN_CONFIG.ORDER_SHORT_CODE%type,
	p_ORDER_EXPIRED IN TK_ORDER_SCAN_CONFIG.ORDER_EXPIRED%type,
	p_ORDER_FILTER IN TK_ORDER_SCAN_CONFIG.ORDER_FILTER%type,
	p_WMS_QTY_SYNC IN TK_ORDER_SCAN_CONFIG.WMS_QTY_SYNC%type,
	p_SCAN_ENABLED IN TK_ORDER_SCAN_CONFIG.SCAN_ENABLED%type,
	p_WARRANTY_ENABLED IN TK_ORDER_SCAN_CONFIG.WARRANTY_ENABLED%type,
	p_ISADVANCE IN TK_ORDER_SCAN_CONFIG.ISADVANCE%type,
	p_PICK_RESTRICTION IN TK_ORDER_SCAN_CONFIG.PICK_RESTRICTION%type,
	p_CREATE_DATE IN TK_ORDER_SCAN_CONFIG.CREATE_DATE%type)
IS
BEGIN
	UPDATE TK_ORDER_SCAN_CONFIG
	SET
		LINE_SEQ	= p_LINE_SEQ,
		ORDER_TYPE	= p_ORDER_TYPE,
		ORDER_DESCRIPTION	= p_ORDER_DESCRIPTION,
		ORDER_SHORT_CODE	= p_ORDER_SHORT_CODE,
		ORDER_EXPIRED	= p_ORDER_EXPIRED,
		ORDER_FILTER	= p_ORDER_FILTER,
		WMS_QTY_SYNC	= p_WMS_QTY_SYNC,
		SCAN_ENABLED	= p_SCAN_ENABLED,
		WARRANTY_ENABLED	= p_WARRANTY_ENABLED,
		ISADVANCE	= p_ISADVANCE,
		PICK_RESTRICTION	= p_PICK_RESTRICTION,
		CREATE_DATE	= p_CREATE_DATE
	WHERE
		LINE_SEQ = p_LINE_SEQ
;
	
END P_Update;
 
 
 PROCEDURE P_Insert (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type,
	p_ORDER_TYPE IN TK_ORDER_SCAN_CONFIG.ORDER_TYPE%type,
	p_ORDER_DESCRIPTION IN TK_ORDER_SCAN_CONFIG.ORDER_DESCRIPTION%type,
	p_ORDER_SHORT_CODE IN TK_ORDER_SCAN_CONFIG.ORDER_SHORT_CODE%type,
	p_ORDER_EXPIRED IN TK_ORDER_SCAN_CONFIG.ORDER_EXPIRED%type,
	p_ORDER_FILTER IN TK_ORDER_SCAN_CONFIG.ORDER_FILTER%type,
	p_WMS_QTY_SYNC IN TK_ORDER_SCAN_CONFIG.WMS_QTY_SYNC%type,
	p_SCAN_ENABLED IN TK_ORDER_SCAN_CONFIG.SCAN_ENABLED%type,
	p_WARRANTY_ENABLED IN TK_ORDER_SCAN_CONFIG.WARRANTY_ENABLED%type,
	p_ISADVANCE IN TK_ORDER_SCAN_CONFIG.ISADVANCE%type,
	p_PICK_RESTRICTION IN TK_ORDER_SCAN_CONFIG.PICK_RESTRICTION%type,
	p_CREATE_DATE IN TK_ORDER_SCAN_CONFIG.CREATE_DATE%type)
 IS
BEGIN


	INSERT
	INTO TK_ORDER_SCAN_CONFIG
	(
		LINE_SEQ,
		ORDER_TYPE,
		ORDER_DESCRIPTION,
		ORDER_SHORT_CODE,
		ORDER_EXPIRED,
		ORDER_FILTER,
		WMS_QTY_SYNC,
		SCAN_ENABLED,
		WARRANTY_ENABLED,
		ISADVANCE,
		PICK_RESTRICTION,
		CREATE_DATE
	)
	VALUES
	(
		p_LINE_SEQ,
		p_ORDER_TYPE,
		p_ORDER_DESCRIPTION,
		p_ORDER_SHORT_CODE,
		p_ORDER_EXPIRED,
		p_ORDER_FILTER,
		p_WMS_QTY_SYNC,
		p_SCAN_ENABLED,
		p_WARRANTY_ENABLED,
		p_ISADVANCE,
		p_PICK_RESTRICTION,
		p_CREATE_DATE
	);
END P_Insert ;

PROCEDURE P_Delete (	p_LINE_SEQ IN TK_ORDER_SCAN_CONFIG.LINE_SEQ%type)
IS
BEGIN
	DELETE	FROM TK_ORDER_SCAN_CONFIG
	WHERE
		LINE_SEQ = p_LINE_SEQ;
END P_Delete;




END PKG_TK_ORDER_SCAN_CONFIG;
/
