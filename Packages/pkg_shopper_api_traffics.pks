DROP PACKAGE DSS.PKG_SHOPPER_API_TRAFFICS;

CREATE OR REPLACE PACKAGE DSS.PKG_SHOPPER_API_TRAFFICS  as 

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_LoadByPrimaryKey (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_Update (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_TRAFFICS.EVENTID%type,
	p_SHOPPERTRAKID IN SHOPPER_API_TRAFFICS.SHOPPERTRAKID%type,
	p_CUSTOMERID IN SHOPPER_API_TRAFFICS.CUSTOMERID%type,
	p_GROUPBYCODE IN SHOPPER_API_TRAFFICS.GROUPBYCODE%type,
	p_PERIOD_CODE IN SHOPPER_API_TRAFFICS.PERIOD_CODE%type,
	p_STARTDATE IN SHOPPER_API_TRAFFICS.STARTDATE%type,
	p_ENDDATE IN SHOPPER_API_TRAFFICS.ENDDATE%type,
	p_TRAFFIC_EXITS IN SHOPPER_API_TRAFFICS.TRAFFIC_EXITS%type,
	p_TRAFFIC_ENTERS IN SHOPPER_API_TRAFFICS.TRAFFIC_ENTERS%type,
	p_CONVERSION IN SHOPPER_API_TRAFFICS.CONVERSION%type,
	p_STAR_DATA IN SHOPPER_API_TRAFFICS.STAR_DATA%type,
	p_SALES IN SHOPPER_API_TRAFFICS.SALES%type,
	p_AVGTRANSACTIONSIZE IN SHOPPER_API_TRAFFICS.AVGTRANSACTIONSIZE%type,
	p_DWL_DATE IN SHOPPER_API_TRAFFICS.DWL_DATE%type); 
PROCEDURE P_Insert (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_TRAFFICS.EVENTID%type,
	p_SHOPPERTRAKID IN SHOPPER_API_TRAFFICS.SHOPPERTRAKID%type,
	p_CUSTOMERID IN SHOPPER_API_TRAFFICS.CUSTOMERID%type,
	p_GROUPBYCODE IN SHOPPER_API_TRAFFICS.GROUPBYCODE%type,
	p_PERIOD_CODE IN SHOPPER_API_TRAFFICS.PERIOD_CODE%type,
	p_STARTDATE IN SHOPPER_API_TRAFFICS.STARTDATE%type,
	p_ENDDATE IN SHOPPER_API_TRAFFICS.ENDDATE%type,
	p_TRAFFIC_EXITS IN SHOPPER_API_TRAFFICS.TRAFFIC_EXITS%type,
	p_TRAFFIC_ENTERS IN SHOPPER_API_TRAFFICS.TRAFFIC_ENTERS%type,
	p_CONVERSION IN SHOPPER_API_TRAFFICS.CONVERSION%type,
	p_STAR_DATA IN SHOPPER_API_TRAFFICS.STAR_DATA%type,
	p_SALES IN SHOPPER_API_TRAFFICS.SALES%type,
	p_AVGTRANSACTIONSIZE IN SHOPPER_API_TRAFFICS.AVGTRANSACTIONSIZE%type,
	p_DWL_DATE IN SHOPPER_API_TRAFFICS.DWL_DATE%type); 
PROCEDURE P_Delete (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type); 

END PKG_SHOPPER_API_TRAFFICS;
/


DROP PACKAGE BODY DSS.PKG_SHOPPER_API_TRAFFICS;

CREATE OR REPLACE PACKAGE BODY DSS.PKG_SHOPPER_API_TRAFFICS  as 

PROCEDURE P_LoadByPrimaryKey (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		ROWSEQ,
		EVENTID,
		SHOPPERTRAKID,
		CUSTOMERID,
		GROUPBYCODE,
		PERIOD_CODE,
		STARTDATE,
		ENDDATE,
		TRAFFIC_EXITS,
		TRAFFIC_ENTERS,
		CONVERSION,
		STAR_DATA,
		SALES,
		AVGTRANSACTIONSIZE,
		DWL_DATE
	FROM SHOPPER_API_TRAFFICS
	WHERE
		ROWSEQ = p_ROWSEQ
;
END P_LoadByPrimaryKey;

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		ROWSEQ,
		EVENTID,
		SHOPPERTRAKID,
		CUSTOMERID,
		GROUPBYCODE,
		PERIOD_CODE,
		STARTDATE,
		ENDDATE,
		TRAFFIC_EXITS,
		TRAFFIC_ENTERS,
		CONVERSION,
		STAR_DATA,
		SALES,
		AVGTRANSACTIONSIZE,
		DWL_DATE
	FROM SHOPPER_API_TRAFFICS;
END P_LoadAll ;


PROCEDURE P_Update (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_TRAFFICS.EVENTID%type,
	p_SHOPPERTRAKID IN SHOPPER_API_TRAFFICS.SHOPPERTRAKID%type,
	p_CUSTOMERID IN SHOPPER_API_TRAFFICS.CUSTOMERID%type,
	p_GROUPBYCODE IN SHOPPER_API_TRAFFICS.GROUPBYCODE%type,
	p_PERIOD_CODE IN SHOPPER_API_TRAFFICS.PERIOD_CODE%type,
	p_STARTDATE IN SHOPPER_API_TRAFFICS.STARTDATE%type,
	p_ENDDATE IN SHOPPER_API_TRAFFICS.ENDDATE%type,
	p_TRAFFIC_EXITS IN SHOPPER_API_TRAFFICS.TRAFFIC_EXITS%type,
	p_TRAFFIC_ENTERS IN SHOPPER_API_TRAFFICS.TRAFFIC_ENTERS%type,
	p_CONVERSION IN SHOPPER_API_TRAFFICS.CONVERSION%type,
	p_STAR_DATA IN SHOPPER_API_TRAFFICS.STAR_DATA%type,
	p_SALES IN SHOPPER_API_TRAFFICS.SALES%type,
	p_AVGTRANSACTIONSIZE IN SHOPPER_API_TRAFFICS.AVGTRANSACTIONSIZE%type,
	p_DWL_DATE IN SHOPPER_API_TRAFFICS.DWL_DATE%type)
IS
BEGIN
	UPDATE SHOPPER_API_TRAFFICS
	SET
		ROWSEQ	= p_ROWSEQ,
		EVENTID	= p_EVENTID,
		SHOPPERTRAKID	= p_SHOPPERTRAKID,
		CUSTOMERID	= p_CUSTOMERID,
		GROUPBYCODE	= p_GROUPBYCODE,
		PERIOD_CODE	= p_PERIOD_CODE,
		STARTDATE	= p_STARTDATE,
		ENDDATE	= p_ENDDATE,
		TRAFFIC_EXITS	= p_TRAFFIC_EXITS,
		TRAFFIC_ENTERS	= p_TRAFFIC_ENTERS,
		CONVERSION	= p_CONVERSION,
		STAR_DATA	= p_STAR_DATA,
		SALES	= p_SALES,
		AVGTRANSACTIONSIZE	= p_AVGTRANSACTIONSIZE,
		DWL_DATE	= p_DWL_DATE
	WHERE
		ROWSEQ = p_ROWSEQ
;
	
END P_Update;
 
 
 PROCEDURE P_Insert (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_TRAFFICS.EVENTID%type,
	p_SHOPPERTRAKID IN SHOPPER_API_TRAFFICS.SHOPPERTRAKID%type,
	p_CUSTOMERID IN SHOPPER_API_TRAFFICS.CUSTOMERID%type,
	p_GROUPBYCODE IN SHOPPER_API_TRAFFICS.GROUPBYCODE%type,
	p_PERIOD_CODE IN SHOPPER_API_TRAFFICS.PERIOD_CODE%type,
	p_STARTDATE IN SHOPPER_API_TRAFFICS.STARTDATE%type,
	p_ENDDATE IN SHOPPER_API_TRAFFICS.ENDDATE%type,
	p_TRAFFIC_EXITS IN SHOPPER_API_TRAFFICS.TRAFFIC_EXITS%type,
	p_TRAFFIC_ENTERS IN SHOPPER_API_TRAFFICS.TRAFFIC_ENTERS%type,
	p_CONVERSION IN SHOPPER_API_TRAFFICS.CONVERSION%type,
	p_STAR_DATA IN SHOPPER_API_TRAFFICS.STAR_DATA%type,
	p_SALES IN SHOPPER_API_TRAFFICS.SALES%type,
	p_AVGTRANSACTIONSIZE IN SHOPPER_API_TRAFFICS.AVGTRANSACTIONSIZE%type,
	p_DWL_DATE IN SHOPPER_API_TRAFFICS.DWL_DATE%type)
 IS
BEGIN
        
    DELETE FROM  SHOPPER_API_TRAFFICS WHERE  SHOPPERTRAKID = p_SHOPPERTRAKID 
    AND STARTDATE =  p_STARTDATE  
    AND ENDDATE = p_ENDDATE  ;

	INSERT
	INTO SHOPPER_API_TRAFFICS
	(
		ROWSEQ,
		EVENTID,
		SHOPPERTRAKID,
		CUSTOMERID,
		GROUPBYCODE,
		PERIOD_CODE,
		STARTDATE,
		ENDDATE,
		TRAFFIC_EXITS,
		TRAFFIC_ENTERS,
		CONVERSION,
		STAR_DATA,
		SALES,
		AVGTRANSACTIONSIZE,
		DWL_DATE
	)
	VALUES
	(
		p_ROWSEQ,
		p_EVENTID,
		p_SHOPPERTRAKID,
		p_CUSTOMERID,
		p_GROUPBYCODE,
		p_PERIOD_CODE,
		p_STARTDATE,
		p_ENDDATE,
		p_TRAFFIC_EXITS,
		p_TRAFFIC_ENTERS,
		p_CONVERSION,
		p_STAR_DATA,
		p_SALES,
		p_AVGTRANSACTIONSIZE,
		p_DWL_DATE
	);
END P_Insert ;

PROCEDURE P_Delete (	p_ROWSEQ IN SHOPPER_API_TRAFFICS.ROWSEQ%type)
IS
BEGIN
	DELETE	FROM SHOPPER_API_TRAFFICS
	WHERE
		ROWSEQ = p_ROWSEQ;
END P_Delete;




END PKG_SHOPPER_API_TRAFFICS;
/
