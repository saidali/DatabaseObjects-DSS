DROP PACKAGE DSS.PKG_SHOPPER_API_EVENTS;

CREATE OR REPLACE PACKAGE DSS.PKG_SHOPPER_API_EVENTS  as 

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_LoadByPrimaryKey (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_Update (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_EVENTS.EVENTID%type,
	p_API_NAME IN SHOPPER_API_EVENTS.API_NAME%type,
	p_APIPARAMETER_1 IN SHOPPER_API_EVENTS.APIPARAMETER_1%type,
	p_APIPARAMETER_2 IN SHOPPER_API_EVENTS.APIPARAMETER_2%type,
	p_APIPARAMETER_3 IN SHOPPER_API_EVENTS.APIPARAMETER_3%type,
	p_APIPARAMETER_4 IN SHOPPER_API_EVENTS.APIPARAMETER_4%type,
	p_CREATE_DATE IN SHOPPER_API_EVENTS.CREATE_DATE%type,
	p_LAST_RUNDATE IN SHOPPER_API_EVENTS.LAST_RUNDATE%type,
	p_NORECORDS IN SHOPPER_API_EVENTS.NORECORDS%type,
	p_STATUS IN SHOPPER_API_EVENTS.STATUS%type,
	p_ERROR_MESSAGE IN SHOPPER_API_EVENTS.ERROR_MESSAGE%type); 
PROCEDURE P_Insert (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_EVENTS.EVENTID%type,
	p_API_NAME IN SHOPPER_API_EVENTS.API_NAME%type,
	p_APIPARAMETER_1 IN SHOPPER_API_EVENTS.APIPARAMETER_1%type,
	p_APIPARAMETER_2 IN SHOPPER_API_EVENTS.APIPARAMETER_2%type,
	p_APIPARAMETER_3 IN SHOPPER_API_EVENTS.APIPARAMETER_3%type,
	p_APIPARAMETER_4 IN SHOPPER_API_EVENTS.APIPARAMETER_4%type,
	p_CREATE_DATE IN SHOPPER_API_EVENTS.CREATE_DATE%type,
	p_LAST_RUNDATE IN SHOPPER_API_EVENTS.LAST_RUNDATE%type,
	p_NORECORDS IN SHOPPER_API_EVENTS.NORECORDS%type,
	p_STATUS IN SHOPPER_API_EVENTS.STATUS%type,
	p_ERROR_MESSAGE IN SHOPPER_API_EVENTS.ERROR_MESSAGE%type); 
PROCEDURE P_Delete (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type); 

END PKG_SHOPPER_API_EVENTS;
/


DROP PACKAGE BODY DSS.PKG_SHOPPER_API_EVENTS;

CREATE OR REPLACE PACKAGE BODY DSS.PKG_SHOPPER_API_EVENTS  as 

PROCEDURE P_LoadByPrimaryKey (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
  outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		ROWSEQ,
		EVENTID,
		API_NAME,
		APIPARAMETER_1,
		APIPARAMETER_2,
		APIPARAMETER_3,
		APIPARAMETER_4,
		CREATE_DATE,
		LAST_RUNDATE,
		NORECORDS,
		STATUS,
		ERROR_MESSAGE
	FROM SHOPPER_API_EVENTS
	WHERE
		ROWSEQ = p_ROWSEQ
;
END P_LoadByPrimaryKey;

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
	SELECT
		ROWSEQ,
		EVENTID,
		API_NAME,
		APIPARAMETER_1,
		APIPARAMETER_2,
		APIPARAMETER_3,
		APIPARAMETER_4,
		CREATE_DATE,
		LAST_RUNDATE,
		NORECORDS,
		STATUS,
		ERROR_MESSAGE
	FROM SHOPPER_API_EVENTS;
END P_LoadAll ;


PROCEDURE P_Update (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_EVENTS.EVENTID%type,
	p_API_NAME IN SHOPPER_API_EVENTS.API_NAME%type,
	p_APIPARAMETER_1 IN SHOPPER_API_EVENTS.APIPARAMETER_1%type,
	p_APIPARAMETER_2 IN SHOPPER_API_EVENTS.APIPARAMETER_2%type,
	p_APIPARAMETER_3 IN SHOPPER_API_EVENTS.APIPARAMETER_3%type,
	p_APIPARAMETER_4 IN SHOPPER_API_EVENTS.APIPARAMETER_4%type,
	p_CREATE_DATE IN SHOPPER_API_EVENTS.CREATE_DATE%type,
	p_LAST_RUNDATE IN SHOPPER_API_EVENTS.LAST_RUNDATE%type,
	p_NORECORDS IN SHOPPER_API_EVENTS.NORECORDS%type,
	p_STATUS IN SHOPPER_API_EVENTS.STATUS%type,
	p_ERROR_MESSAGE IN SHOPPER_API_EVENTS.ERROR_MESSAGE%type)
IS
BEGIN
	UPDATE SHOPPER_API_EVENTS
	SET
		EVENTID	= p_EVENTID,
		API_NAME	= p_API_NAME,
		APIPARAMETER_1	= p_APIPARAMETER_1,
		APIPARAMETER_2	= p_APIPARAMETER_2,
		APIPARAMETER_3	= p_APIPARAMETER_3,
		APIPARAMETER_4	= p_APIPARAMETER_4,
		CREATE_DATE	= p_CREATE_DATE,
		LAST_RUNDATE	= p_LAST_RUNDATE,
		NORECORDS	= p_NORECORDS,
		STATUS	= p_STATUS,
		ERROR_MESSAGE	= p_ERROR_MESSAGE
	WHERE
		ROWSEQ = p_ROWSEQ
;
	
END P_Update;
 
 
 PROCEDURE P_Insert (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type,
	p_EVENTID IN SHOPPER_API_EVENTS.EVENTID%type,
	p_API_NAME IN SHOPPER_API_EVENTS.API_NAME%type,
	p_APIPARAMETER_1 IN SHOPPER_API_EVENTS.APIPARAMETER_1%type,
	p_APIPARAMETER_2 IN SHOPPER_API_EVENTS.APIPARAMETER_2%type,
	p_APIPARAMETER_3 IN SHOPPER_API_EVENTS.APIPARAMETER_3%type,
	p_APIPARAMETER_4 IN SHOPPER_API_EVENTS.APIPARAMETER_4%type,
	p_CREATE_DATE IN SHOPPER_API_EVENTS.CREATE_DATE%type,
	p_LAST_RUNDATE IN SHOPPER_API_EVENTS.LAST_RUNDATE%type,
	p_NORECORDS IN SHOPPER_API_EVENTS.NORECORDS%type,
	p_STATUS IN SHOPPER_API_EVENTS.STATUS%type,
	p_ERROR_MESSAGE IN SHOPPER_API_EVENTS.ERROR_MESSAGE%type)
 IS
BEGIN


	INSERT
	INTO SHOPPER_API_EVENTS
	(
		ROWSEQ,
		EVENTID,
		API_NAME,
		APIPARAMETER_1,
		APIPARAMETER_2,
		APIPARAMETER_3,
		APIPARAMETER_4,
		ERROR_MESSAGE
	)
	VALUES
	(
		p_ROWSEQ,
		p_EVENTID,
		p_API_NAME,
		p_APIPARAMETER_1,
		p_APIPARAMETER_2,
		p_APIPARAMETER_3,
		p_APIPARAMETER_4,
		p_ERROR_MESSAGE
	);
END P_Insert ;

PROCEDURE P_Delete (	p_ROWSEQ IN SHOPPER_API_EVENTS.ROWSEQ%type)
IS
BEGIN
	DELETE	FROM SHOPPER_API_EVENTS
	WHERE
		ROWSEQ = p_ROWSEQ;
END P_Delete;




END PKG_SHOPPER_API_EVENTS;
/
