DROP PACKAGE DSS.PKG_DSS_PARSING_FUNCTIONS;

CREATE OR REPLACE PACKAGE DSS.PKG_DSS_PARSING_FUNCTIONS  as 

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_LoadByPrimaryKey (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
  outCursor OUT DSS.MYGEN.sqlcur); 
PROCEDURE P_Update (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
    p_FUNCTION_NAME IN DSS_PARSING_FUNCTIONS.FUNCTION_NAME%type,
    p_DESCRIPTION IN DSS_PARSING_FUNCTIONS.DESCRIPTION%type,
    p_IS_NUM_VAL IN DSS_PARSING_FUNCTIONS.IS_NUM_VAL%type,
    p_STATUS IN DSS_PARSING_FUNCTIONS.STATUS%type,
    p_CREATE_DATE IN DSS_PARSING_FUNCTIONS.CREATE_DATE%type,
    p_CREATE_BY IN DSS_PARSING_FUNCTIONS.CREATE_BY%type,
    p_ATTRIBUTE1 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE1%type,
    p_ATTRIBUTE2 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE2%type,
    p_ATTRIBUTE3 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE3%type); 
PROCEDURE P_Insert (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
    p_FUNCTION_NAME IN DSS_PARSING_FUNCTIONS.FUNCTION_NAME%type,
    p_DESCRIPTION IN DSS_PARSING_FUNCTIONS.DESCRIPTION%type,
    p_IS_NUM_VAL IN DSS_PARSING_FUNCTIONS.IS_NUM_VAL%type,
    p_STATUS IN DSS_PARSING_FUNCTIONS.STATUS%type,
    p_CREATE_DATE IN DSS_PARSING_FUNCTIONS.CREATE_DATE%type,
    p_CREATE_BY IN DSS_PARSING_FUNCTIONS.CREATE_BY%type,
    p_ATTRIBUTE1 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE1%type,
    p_ATTRIBUTE2 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE2%type,
    p_ATTRIBUTE3 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE3%type); 
PROCEDURE P_Delete (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type); 

END PKG_DSS_PARSING_FUNCTIONS;
/


DROP PACKAGE BODY DSS.PKG_DSS_PARSING_FUNCTIONS;

CREATE OR REPLACE PACKAGE BODY DSS.PKG_DSS_PARSING_FUNCTIONS  as 

PROCEDURE P_LoadByPrimaryKey (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
  outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
    SELECT
        FUNCTION_ID,
        FUNCTION_NAME,
        DESCRIPTION,
        IS_NUM_VAL,
        STATUS,
        CREATE_DATE,
        CREATE_BY,
        ATTRIBUTE1,
        ATTRIBUTE2,
        ATTRIBUTE3
    FROM DSS_PARSING_FUNCTIONS
    WHERE
        FUNCTION_ID = p_FUNCTION_ID
;
END P_LoadByPrimaryKey;

PROCEDURE P_LoadAll (outCursor OUT DSS.MYGEN.sqlcur)
IS
BEGIN
    OPEN outCursor FOR
    SELECT
        FUNCTION_ID,
        FUNCTION_NAME,
        DESCRIPTION,
        IS_NUM_VAL,
        STATUS,
        CREATE_DATE,
        CREATE_BY,
        ATTRIBUTE1,
        ATTRIBUTE2,
        ATTRIBUTE3
    FROM DSS_PARSING_FUNCTIONS order by FUNCTION_ID ;
END P_LoadAll ;


PROCEDURE P_Update (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
    p_FUNCTION_NAME IN DSS_PARSING_FUNCTIONS.FUNCTION_NAME%type,
    p_DESCRIPTION IN DSS_PARSING_FUNCTIONS.DESCRIPTION%type,
    p_IS_NUM_VAL IN DSS_PARSING_FUNCTIONS.IS_NUM_VAL%type,
    p_STATUS IN DSS_PARSING_FUNCTIONS.STATUS%type,
    p_CREATE_DATE IN DSS_PARSING_FUNCTIONS.CREATE_DATE%type,
    p_CREATE_BY IN DSS_PARSING_FUNCTIONS.CREATE_BY%type,
    p_ATTRIBUTE1 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE1%type,
    p_ATTRIBUTE2 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE2%type,
    p_ATTRIBUTE3 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE3%type)
IS
BEGIN
    UPDATE DSS_PARSING_FUNCTIONS
    SET
        FUNCTION_ID    = p_FUNCTION_ID,
        FUNCTION_NAME    = p_FUNCTION_NAME,
        DESCRIPTION    = p_DESCRIPTION,
        IS_NUM_VAL    = p_IS_NUM_VAL,
        STATUS    = p_STATUS,
        CREATE_DATE    = p_CREATE_DATE,
        CREATE_BY    = p_CREATE_BY,
        ATTRIBUTE1    = p_ATTRIBUTE1,
        ATTRIBUTE2    = p_ATTRIBUTE2,
        ATTRIBUTE3    = p_ATTRIBUTE3
    WHERE
        FUNCTION_ID = p_FUNCTION_ID
;
    
END P_Update;
 
 
 PROCEDURE P_Insert (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type,
    p_FUNCTION_NAME IN DSS_PARSING_FUNCTIONS.FUNCTION_NAME%type,
    p_DESCRIPTION IN DSS_PARSING_FUNCTIONS.DESCRIPTION%type,
    p_IS_NUM_VAL IN DSS_PARSING_FUNCTIONS.IS_NUM_VAL%type,
    p_STATUS IN DSS_PARSING_FUNCTIONS.STATUS%type,
    p_CREATE_DATE IN DSS_PARSING_FUNCTIONS.CREATE_DATE%type,
    p_CREATE_BY IN DSS_PARSING_FUNCTIONS.CREATE_BY%type,
    p_ATTRIBUTE1 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE1%type,
    p_ATTRIBUTE2 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE2%type,
    p_ATTRIBUTE3 IN DSS_PARSING_FUNCTIONS.ATTRIBUTE3%type)
 IS
BEGIN


    INSERT
    INTO DSS_PARSING_FUNCTIONS
    (
        FUNCTION_ID,
        FUNCTION_NAME,
        DESCRIPTION,
        IS_NUM_VAL,
        STATUS,
        CREATE_DATE,
        CREATE_BY,
        ATTRIBUTE1,
        ATTRIBUTE2,
        ATTRIBUTE3
    )
    VALUES
    (
        p_FUNCTION_ID,
        p_FUNCTION_NAME,
        p_DESCRIPTION,
        p_IS_NUM_VAL,
        p_STATUS,
        p_CREATE_DATE,
        p_CREATE_BY,
        p_ATTRIBUTE1,
        p_ATTRIBUTE2,
        p_ATTRIBUTE3
    );
END P_Insert ;

PROCEDURE P_Delete (    p_FUNCTION_ID IN DSS_PARSING_FUNCTIONS.FUNCTION_ID%type)
IS
BEGIN
    DELETE    FROM DSS_PARSING_FUNCTIONS
    WHERE
        FUNCTION_ID = p_FUNCTION_ID;
END P_Delete;




END PKG_DSS_PARSING_FUNCTIONS;
/
