DROP PACKAGE DSS.PKG_INVOICE;

CREATE OR REPLACE PACKAGE DSS.PKG_INVOICE
AS
   /******************************************************************************
      NAME:       PKG_INVOICE
      PURPOSE: TO GET INVOICE PRINT DETAILS
   ******************************************************************************/

   PROCEDURE GET_SO_LINES (ORGID         IN     VARCHAR2,
                           ordernumber   IN     VARCHAR2,
                           outCursor        OUT DSS.MYGEN.sqlcur);
                           
  PROCEDURE GET_SO_LINES_1 (ORGID         IN     VARCHAR2,
                           ordernumber   IN     VARCHAR2,
                           outCursor        OUT DSS.MYGEN.sqlcur);
END PKG_INVOICE;
/


DROP PACKAGE BODY DSS.PKG_INVOICE;

CREATE OR REPLACE PACKAGE BODY DSS.PKG_INVOICE
AS
   PROCEDURE GET_SO_LINES (ORGID         IN     VARCHAR2,
                           ORDERNUMBER   IN     VARCHAR2,
                           OUTCURSOR        OUT DSS.MYGEN.SQLCUR)
   AS
   BEGIN
      OPEN OUTCURSOR FOR
            SELECT H.CUSTOMER_TRX_LINE_ID,
       H.CUSTOMER_TRX_ID,
       H.INVENTORY_ITEM_ID,
       ITM.SEGMENT1 PRODUCT_CODE,
      CASE 
      WHEN H.ORG_ID='219' THEN  NVL(ITM.ATTRIBUTE8, H.DESCRIPTION)
      ELSE H.DESCRIPTION END AS DESCRIPTION,      
       H.ORG_ID ,
       H.SALES_ORDER ORDER_NUMBER,
       H.WAREHOUSE_ID ORGANIZATION_ID,
       NVL(H.QUANTITY_ORDERED,H.QUANTITY_CREDITED) QUANTITY,
       H.UNIT_SELLING_PRICE UNIT_PRICE,
       H.EXTENDED_AMOUNT NET_AMOUNT,            
       TX.VAT_TAX_ID TAX_RATE_ID,       
       TX.EXTENDED_AMOUNT TAX_AMOUNT,
       TX.TAX_RATE TAX_PERCENTAGE,
       H.UOM_CODE UOM,
       0 AS DISCOUNT,
       H.EXTENDED_AMOUNT GROSS_AMOUNT,       
       (NVL(H.EXTENDED_AMOUNT,0) + NVL(TX.EXTENDED_AMOUNT,0)) TOTAL_PRICE
  FROM RA_CUSTOMER_TRX_LINES_ALL@AXMAPPS H
    JOIN MTL_SYSTEM_ITEMS@AXMAPPS ITM ON H.INVENTORY_ITEM_ID = ITM.INVENTORY_ITEM_ID AND  H.WAREHOUSE_ID = ITM.ORGANIZATION_ID AND H.PREVIOUS_CUSTOMER_TRX_ID IS NULL
       LEFT JOIN RA_CUSTOMER_TRX_LINES_ALL@AXMAPPS TX
          ON     H.CUSTOMER_TRX_LINE_ID = TX.LINK_TO_CUST_TRX_LINE_ID
             AND TX.LINE_TYPE = 'TAX'
WHERE H.LINE_TYPE = 'LINE' 
AND H.INTERFACE_LINE_CONTEXT = 'ORDER ENTRY' /*To avoid Credit Note line from ERP- Jiji*/
AND H.SALES_ORDER = ORDERNUMBER 
AND H.ORG_ID=ORGID;
   END GET_SO_LINES;

   PROCEDURE GET_SO_LINES_1 (ORGID         IN     VARCHAR2,
                             ORDERNUMBER   IN     VARCHAR2,
                             OUTCURSOR        OUT DSS.MYGEN.SQLCUR)
   AS
   BEGIN
      OPEN OUTCURSOR FOR
           SELECT H.CUSTOMER_TRX_LINE_ID,
       H.CUSTOMER_TRX_ID,
       H.INVENTORY_ITEM_ID,
      ITM.SEGMENT1 PRODUCT_CODE,  
       CASE 
      WHEN H.ORG_ID='219' THEN  NVL(ITM.ATTRIBUTE8, H.DESCRIPTION )
      ELSE H.DESCRIPTION END AS DESCRIPTION,   
       H.ORG_ID ,
       H.SALES_ORDER ORDER_NUMBER,
       H.WAREHOUSE_ID ORGANIZATION_ID,
      NVL(H.QUANTITY_ORDERED,H.QUANTITY_CREDITED) QUANTITY,
       H.UNIT_SELLING_PRICE UNIT_PRICE,
       H.EXTENDED_AMOUNT NET_AMOUNT,            
       TX.VAT_TAX_ID TAX_RATE_ID,       
       TX.EXTENDED_AMOUNT TAX_AMOUNT,
       TX.TAX_RATE TAX_PERCENTAGE,
       H.UOM_CODE UOM,
       0 AS DISCOUNT,
       H.EXTENDED_AMOUNT GROSS_AMOUNT,       
       (NVL(H.EXTENDED_AMOUNT,0) + NVL(TX.EXTENDED_AMOUNT,0)) TOTAL_PRICE
  FROM RA_CUSTOMER_TRX_LINES_ALL@AXMAPPS H
    JOIN MTL_SYSTEM_ITEMS@AXMAPPS ITM ON H.INVENTORY_ITEM_ID = ITM.INVENTORY_ITEM_ID AND  H.WAREHOUSE_ID = ITM.ORGANIZATION_ID AND H.PREVIOUS_CUSTOMER_TRX_ID IS NULL
       LEFT JOIN RA_CUSTOMER_TRX_LINES_ALL@AXMAPPS TX
          ON     H.CUSTOMER_TRX_LINE_ID = TX.LINK_TO_CUST_TRX_LINE_ID
             AND TX.LINE_TYPE = 'TAX'
WHERE H.LINE_TYPE = 'LINE' 
AND H.INTERFACE_LINE_CONTEXT = 'ORDER ENTRY' /*To avoid Credit Note line from ERP- Jiji*/
AND H.SALES_ORDER = ORDERNUMBER 
AND H.ORG_ID=ORGID;
   END GET_SO_LINES_1;
END PKG_INVOICE;
/
